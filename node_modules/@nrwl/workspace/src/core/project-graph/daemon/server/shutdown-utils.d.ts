/// <reference types="node" />
import type { Server } from 'net';
import type { WatcherSubscription } from './watcher';
export declare const SERVER_INACTIVITY_TIMEOUT_MS: 10800000;
declare type ServerTerminationReason = `received process ${NodeJS.Signals}` | '@nrwl/workspace installation changed' | `${typeof SERVER_INACTIVITY_TIMEOUT_MS}ms of inactivity`;
interface HandleServerProcessTerminationParams {
    server: Server;
    reason: ServerTerminationReason;
    watcherSubscription: WatcherSubscription | undefined;
}
export declare function handleServerProcessTermination({ server, reason, watcherSubscription, }: HandleServerProcessTerminationParams): Promise<void>;
export declare function resetInactivityTimeout(cb: () => void): void;
export {};
